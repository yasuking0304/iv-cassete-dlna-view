<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:ed="http://schemas.microsoft.com/expression/2010/drawing">
    <!-- ToolTip Style -->
    <Style TargetType="ToolTip">
        <Setter Property = "Opacity" Value="0.8"/>
        <Setter Property = "HorizontalOffset" Value="10"/>
        <Setter Property = "HasDropShadow" Value="True" />
        <Setter Property = "VerticalOffset" Value="10"/>
        <Setter Property = "Background" Value="Black"/>
        <Setter Property = "Foreground" Value="White"/>
        <Setter Property = "FontSize" Value="12"/>
    </Style>
    <!-- comboボックスStyle -->
    <ControlTemplate x:Key="ComboBoxTextBox" TargetType="TextBox">
        <Border x:Name="PART_ContentHost" Focusable="True" />
    </ControlTemplate>
    <Style x:Key="ComboBoxToggleButton" TargetType="ToggleButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="20" />
                        </Grid.ColumnDefinitions>
                        <Border
                              x:Name="Border"
                              Grid.ColumnSpan="2"
                              CornerRadius="0"
                              Background="{TemplateBinding Background}"
                              BorderBrush="{TemplateBinding BorderBrush}"
                              BorderThickness="2" />
                        <Border
                              Grid.Column="0"
                              CornerRadius="0"
                              Background="Transparent"
                              BorderBrush="Transparent"
                              Opacity="0.7"
                              BorderThickness="3" />
                        <Path
                              x:Name="Arrow"
                              Grid.Column="1"
                              Fill="{TemplateBinding Foreground}"
                              Stroke="{TemplateBinding Foreground}"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center"
                              Data="M 0 0 L 3 4 L 6 0 Z"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="DarkBlue" />
                            <Setter TargetName="Border" Property="Opacity" Value="0.8" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="Gray" />
                            <Setter Property="Foreground" Value="Gray"/>
                            <Setter TargetName="Arrow" Property="Fill" Value="LightBlue" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- -->
    <Style TargetType="{x:Type ComboBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="FontSize" Value="15" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <Border
                            Name="Border"
                            Padding="2"
                            Margin="0"
                            BorderThickness="1"
                            CornerRadius="0"
                            Background="Transparent"
                            BorderBrush="Transparent" >
                        <TextBlock TextAlignment="Left">
                            <ContentPresenter />
                        </TextBlock>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="true">
                            <!--<Setter TargetName="Border" Property="BorderBrush" Value="Silver"/>-->
                            <Setter Property="Foreground" Value="Black" />
                            <Setter TargetName="Border" Property="Background" Value="Orange"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ComboBoxStyle" TargetType="{x:Type ComboBox}">
        <Setter Property="Foreground" Value="White" />
        <Setter Property="BorderBrush" Value="Silver" />
        <Setter Property="Background" Value="Black" />
        <Setter Property="Opacity" Value="0.7" />
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="FontSize" Value="15" />
        <Setter Property="MinWidth" Value="40"/>
        <Setter Property="MinHeight" Value="24"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton Name="ToggleButton"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}"
                                Foreground="{TemplateBinding Foreground}"
                                Style="{StaticResource ComboBoxToggleButton}"
                                Grid.Column="2"
                                Focusable="false"
                                IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                            ClickMode="Press">
                        </ToggleButton>
                        <ContentPresenter
                                Name="ContentSite"
                                IsHitTestVisible="False"
                                Content="{TemplateBinding SelectionBoxItem}"
                                ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                Margin="5,3,16,3"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Left"
                            />
                        <TextBox x:Name="PART_EditableTextBox"
                                Style="{x:Null}"
                                Template="{StaticResource ComboBoxTextBox}"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Margin="5,3,16,3"
                                Focusable="True"                               
                                Visibility="Hidden"
                                IsReadOnly="{TemplateBinding IsReadOnly}"
                            />
                        <Popup
                                Name="Popup"
                                Placement="Bottom"
                                IsOpen="{TemplateBinding IsDropDownOpen}"
                                AllowsTransparency="True"
                                Focusable="False"
                                PopupAnimation="Slide">
                            <Grid
                                    Name="DropDown"
                                    SnapsToDevicePixels="True"               
                                    MinWidth="{TemplateBinding ActualWidth}"
                                    MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border
                                        x:Name="DropDownBorder"
                                        Background="Black"
                                        BorderThickness="2"
                                        Opacity="0.7"
                                        BorderBrush="Silver">
                                </Border>
                                <ScrollViewer Margin="4,5,4,4" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                        <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                            <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0"/>
                            <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
                            <!--<Setter TargetName="DropDownBorder" Property="Effect" >
                                    <Setter.Value>
                                        <DropShadowEffect ShadowDepth="2"  Direction="300" Color="Black"/>
                                    </Setter.Value>
                                </Setter>-->
                        </Trigger>
                        <Trigger Property="IsEditable" Value="true">
                            <Setter Property="IsTabStop" Value="false"/>
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility"    Value="Visible"/>
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                        <Trigger  Property="IsMouseOver" Value="True">
                            <!-- マウスオーバー時の背景色 -->
                            <Setter Property="BorderBrush" Value="Orange" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
        </Style.Triggers>
    </Style>
    <!-- テキストボックスStyle -->
    <Style x:Key="TtextBoxtyle" TargetType="{x:Type TextBox}">
        <Setter Property="Opacity" Value="0.7"/>
        <Setter Property="FontFamily" Value="Arial"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="ForceCursor" Value="True"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Opacity" Value="0.7"/>
        <Setter Property="Background" Value="Black"/>
        <Setter Property="BorderBrush" Value="Silver"/>
        <Setter Property="Padding" Value="3,0,3,0"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="Bt" CornerRadius="0" Background="{TemplateBinding Background}"
                                BorderThickness="2" BorderBrush="Silver">
                        <ScrollViewer Margin="0" x:Name="PART_ContentHost"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <!-- マウスオーバー時 -->
                            <Setter Property="Background" TargetName="Bt" Value="Black"/>
                            <Setter Property="BorderBrush" TargetName="Bt" Value="Orange"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <!-- キーボードフォーカス時 -->
                            <Setter Property="Background" TargetName="Bt" Value="Black"/>
                            <Setter Property="BorderBrush" TargetName="Bt" Value="Orange"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <!-- 活性時 -->
                            <Setter Property="Opacity" TargetName="Bt" Value="0.8"/>
                            <Setter Property="Background" TargetName="Bt" Value="DarkBlue"/>
                            <Setter Property="BorderBrush" TargetName="Bt" Value="Gray"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- プログレスバーStyle -->
    <Style x:Key="ProgressBarStyle" TargetType="ProgressBar">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ProgressBar">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="2" CornerRadius="0" Padding="0">
                        <Grid x:Name="PART_Track" >
                            <Rectangle x:Name="PART_Indicator"  HorizontalAlignment="Left"
                                       RadiusX="0" RadiusY="0" Fill="{TemplateBinding Foreground}">
                            </Rectangle>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- タイトル名Style -->
    <Style x:Key="TextBlockTitleStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="#174E8F"/>
        <Setter Property="FontSize"   Value="17"/>
        <Setter Property="TextAlignment" Value="Left"/>
        <Setter Property="Margin" Value="0,0,0,0"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
    </Style>
    <!-- テキストStyle -->
    <Style x:Key="TextBlockContentStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="#191F5D"/>
        <Setter Property="FontSize"   Value="14"/>
        <Setter Property="TextAlignment" Value="Left"/>
        <Setter Property="Margin" Value="3,1,3,0"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
    </Style>
    <Style x:Key="TextBlockWeeksContentStyle" TargetType="{x:Type TextBlock}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Weeks}" Value="SUNDAY">
                <Setter Property="Foreground" Value="#FFFF2D3C"/>
                <Setter Property="Text" Value="{StaticResource SUNDAY}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Weeks}" Value="MONDAY">
                <Setter Property="Foreground" Value="#191F5D"/>
                <Setter Property="Text" Value="{StaticResource MONDAY}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Weeks}" Value="TUESDAY">
                <Setter Property="Foreground" Value="#191F5D"/>
                <Setter Property="Text" Value="{StaticResource TUESDAY}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Weeks}" Value="WEDNESDAY">
                <Setter Property="Foreground" Value="#191F5D"/>
                <Setter Property="Text" Value="{StaticResource WEDNESDAY}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Weeks}" Value="THURSDAY">
                <Setter Property="Foreground" Value="#191F5D"/>
                <Setter Property="Text" Value="{StaticResource THURSDAY}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Weeks}" Value="FRIDAY">
                <Setter Property="Foreground" Value="#191F5D"/>
                <Setter Property="Text" Value="{StaticResource FRIDAY}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Weeks}" Value="SATURDAY">
                <Setter Property="Foreground" Value="#FF3C42E0"/>
                <Setter Property="Text" Value="{StaticResource SATURDAY}"/>
            </DataTrigger>
        </Style.Triggers>
        <Setter Property="FontSize"   Value="14"/>
        <Setter Property="TextAlignment" Value="Left"/>
        <Setter Property="Margin" Value="3,1,3,0"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Foreground" Value="#191F5D"/>
        <Setter Property="Text" Value="-"/>
    </Style>
    <!-- パネルStyle -->
    <Style x:Key="StackPanelVisibleStyle" TargetType="{x:Type StackPanel}">
        <Style.Triggers>
            <DataTrigger  Binding="{Binding ClassStartsWith}" Value="object.container">
                <Setter Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
            <DataTrigger  Binding="{Binding Classes}" Value="object.item.videoItem.videoBroadcast">
                <Setter Property="Visibility" Value="Hidden"/>
            </DataTrigger>
        </Style.Triggers>
        <Setter Property="Visibility" Value="Visible"/>
    </Style>
    <!-- ラベルStyle -->
    <Style x:Key="TextBlockLabelStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="#515151"/>
        <Setter Property="FontSize"   Value="15"/>
        <Setter Property="TextAlignment" Value="Right"/>
        <Setter Property="Margin" Value="3,0,3,0"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
    </Style>
    <!-- -->
    <Style x:Key="TextBlockDlnaLabelStyle" TargetType="{x:Type TextBlock}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsDlnaMode}" Value="NODLNA">
                <Setter Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
        </Style.Triggers>
        <Setter Property="Foreground" Value="#515151"/>
        <Setter Property="FontSize"   Value="15"/>
        <Setter Property="TextAlignment" Value="Right"/>
        <Setter Property="Margin" Value="3,0,3,0"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
    </Style>
    <!-- -->
    <Style x:Key="TextBlockDlnaUploadStyle" TargetType="{x:Type TextBlock}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding DlnaAvUploadSupport}" Value="DLNACAPAVUPLOAD">
                <Setter Property="FontWeight" Value="Bold"/>
                <Setter Property="Foreground" Value="#191F5D"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding IsDlnaMode}" Value="NODLNA">
                <Setter Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
        </Style.Triggers>
        <Setter Property="Foreground" Value="LightGray"/>
    </Style>
    <!-- -->
    <Style x:Key="TextBlockDlnaDtcpMoveStyle" TargetType="{x:Type TextBlock}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding DlnaDtcpMoveSupport}" Value="DLNACAPDTCPMOVE">
                <Setter Property="FontWeight" Value="Bold"/>
                <Setter Property="Foreground" Value="#191F5D"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding IsDlnaMode}" Value="NODLNA">
                <Setter Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
        </Style.Triggers>
        <Setter Property="Foreground" Value="LightGray"/>
    </Style>
    <!-- -->
    <Style x:Key="TextBlockDlnaDtcpCopyStyle" TargetType="{x:Type TextBlock}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding DlnaDtcpCopySupport}" Value="DLNACAPDTCPCOPY">
                <Setter Property="FontWeight" Value="Bold"/>
                <Setter Property="Foreground" Value="#191F5D"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding IsDlnaMode}" Value="NODLNA">
                <Setter Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
        </Style.Triggers>
        <Setter Property="Foreground" Value="LightGray"/>
    </Style>
    <!-- -->
    <Style x:Key="TextBlockJLabsMoveStyle" TargetType="{x:Type TextBlock}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding JLabsMoveSupport}" Value="JLABSCAPMOVE">
                <Setter Property="FontWeight" Value="Bold"/>
                <Setter Property="Foreground" Value="#191F5D"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding IsDlnaMode}" Value="NODLNA">
                <Setter Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
        </Style.Triggers>
        <Setter Property="Foreground" Value="LightGray"/>
    </Style>
    <!-- -->
    <Style x:Key="TextBlockJLabsUploadRecStyle" TargetType="{x:Type TextBlock}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding JLabsUploadRecSupport}" Value="JLABSCAPUPLOADREC">
                <Setter Property="FontWeight" Value="Bold"/>
                <Setter Property="Foreground" Value="#191F5D"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding IsDlnaMode}" Value="NODLNA">
                <Setter Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
        </Style.Triggers>
        <Setter Property="Foreground" Value="LightGray"/>
    </Style>
    <!-- -->
    <Style x:Key="TextBlockSptvMoveStyle" TargetType="{x:Type TextBlock}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding SptvMoveSupport}" Value="SPTVCAPMOVE">
                <Setter Property="FontWeight" Value="Bold"/>
                <Setter Property="Foreground" Value="#191F5D"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding IsDlnaMode}" Value="NODLNA">
                <Setter Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
        </Style.Triggers>
        <Setter Property="Foreground" Value="LightGray"/>
    </Style>
    <!-- -->
    <Style x:Key="TextBlockSptvRecStyle" TargetType="{x:Type TextBlock}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding SptvRecSupport}" Value="SPTVCAPREC">
                <Setter Property="FontWeight" Value="Bold"/>
                <Setter Property="Foreground" Value="#191F5D"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding IsDlnaMode}" Value="NODLNA">
                <Setter Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
        </Style.Triggers>
        <Setter Property="Foreground" Value="LightGray"/>
    </Style>
    <!-- -->
    <Style x:Key="TextBlockRegzaRecStyle" TargetType="{x:Type TextBlock}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding RegzaRecSupport}" Value="REGZACAPMOVE">
                <Setter Property="FontWeight" Value="Bold"/>
                <Setter Property="Foreground" Value="#191F5D"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding IsDlnaMode}" Value="NODLNA">
                <Setter Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
        </Style.Triggers>
        <Setter Property="Foreground" Value="LightGray"/>
    </Style>
    <!-- -->
    <Style x:Key="TextBlockDlnaXSRSRecordStyle" TargetType="{x:Type TextBlock}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Recording}" Value="SCHEDULEDRECORDING2">
                <Setter Property="FontWeight" Value="Bold"/>
                <Setter Property="Foreground" Value="#191F5D"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding IsDlnaMode}" Value="NODLNA">
                <Setter Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
        </Style.Triggers>
        <Setter Property="Foreground" Value="LightGray"/>
    </Style>
    <!-- -->
    <Style x:Key="TextBlockDlnaRecordStyle" TargetType="{x:Type TextBlock}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Recording}" Value="SCHEDULEDRECORDING1">
                <Setter Property="FontWeight" Value="Bold"/>
                <Setter Property="Foreground" Value="#191F5D"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding IsDlnaMode}" Value="NODLNA">
                <Setter Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
        </Style.Triggers>
        <Setter Property="Foreground" Value="LightGray"/>
    </Style>
    <!-- -->
    <Style x:Key="TextBlockDlnaLiveTunerStyle" TargetType="{x:Type TextBlock}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding LiveTunerSupport}" Value="LIVETUNER">
                <Setter Property="FontWeight" Value="Bold"/>
                <Setter Property="Foreground" Value="#191F5D"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding IsDlnaMode}" Value="NODLNA">
                <Setter Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
        </Style.Triggers>
        <Setter Property="Foreground" Value="LightGray"/>
    </Style>
    <!-- -->
    <Style x:Key="ImageDlnaStyle" TargetType="{x:Type Image}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding ImageDlna}" Value="{x:Null}">
                <Setter Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding IsDlnaMode}" Value="NODLNA">
                <Setter Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
        </Style.Triggers>
        <Setter Property="Visibility" Value="Visible"/>
        <Setter Property="Source" Value="{Binding ImageDlna}"/>
    </Style>
    <!-- -->
    <Style x:Key="LineDlnaStyle" TargetType="{x:Type Line}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsDlnaMode}" Value="NODLNA">
                <Setter Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <!-- イメージStyle -->
    <Style x:Key="ImageContentStyle" TargetType="{x:Type Image}">
        <Setter Property="Height" Value="70"/>
        <Style.Triggers>
            <DataTrigger  Binding="{Binding ClassStartsWith}" Value="object.container">
                <Setter Property="Height" Value="0"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <!-- TabItemの選択+マウスオーバー時の背景色 -->
    <LinearGradientBrush x:Key="TabItemHotSelectBackground" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#FFFFBD" Offset="0"/>
        <GradientStop Color="#FFFFBD" Offset="0.1"/>
        <GradientStop Color="#FFFFBD" Offset="0.9"/>
        <GradientStop Color="#EFFFBD" Offset="0.99"/>
    </LinearGradientBrush>
    <!-- TabItemの選択時の背景色 -->
    <LinearGradientBrush x:Key="TabItemSelectBackground" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#FFFFBD" Offset="0"/>
        <GradientStop Color="#FFFFBD" Offset="0.1"/>
        <GradientStop Color="#FFFFBD" Offset="0.9"/>
        <GradientStop Color="#EFFFBD" Offset="0.99"/>
    </LinearGradientBrush>
    <!-- TabItemのマウスオーバー時の背景色 -->
    <LinearGradientBrush x:Key="TabItemHotBackground" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#FFFFDD" Offset="0"/>
        <GradientStop Color="#FFFFDD" Offset="0.1"/>
        <GradientStop Color="#FFFFDD" Offset="0.9"/>
        <GradientStop Color="#EFFFDD" Offset="0.99"/>
    </LinearGradientBrush>
    <!-- -->
    <LinearGradientBrush x:Key="TabItemFolderBackground" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#EFEFFC" Offset="0"/>
        <GradientStop Color="#EFEFFC" Offset="0.1"/>
        <GradientStop Color="#EFEFFC" Offset="0.9"/>
        <GradientStop Color="#EFEFFC" Offset="0.99"/>
    </LinearGradientBrush>
    <!-- Line色 -->
    <LinearGradientBrush x:Key="LineGrayBackground" EndPoint="1,0" StartPoint="0,0">
        <GradientStop Color="#FFFFFF" Offset="0"/>
        <GradientStop Color="LightGray" Offset="0.1"/>
        <GradientStop Color="Gray" Offset="0.3"/>
        <GradientStop Color="Gray" Offset="0.7"/>
        <GradientStop Color="LightGray" Offset="0.9"/>
        <GradientStop Color="#FFFFFF" Offset="0.99"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="LineGreenBackground" EndPoint="1,0" StartPoint="0,0">
        <GradientStop Color="#FFFFFF" Offset="0"/>
        <GradientStop Color="LightGreen" Offset="0.1"/>
        <GradientStop Color="Green" Offset="0.3"/>
        <GradientStop Color="Green" Offset="0.7"/>
        <GradientStop Color="LightGreen" Offset="0.9"/>
        <GradientStop Color="#FFFFFF" Offset="0.99"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="LineRedBackground" EndPoint="1,0" StartPoint="0,0">
        <GradientStop Color="#FFFFFF" Offset="0"/>
        <GradientStop Color="LightPink" Offset="0.1"/>
        <GradientStop Color="Red" Offset="0.3"/>
        <GradientStop Color="Red" Offset="0.7"/>
        <GradientStop Color="LightPink" Offset="0.9"/>
        <GradientStop Color="#FFFFFF" Offset="0.99"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="LineBlueBackground" EndPoint="1,0" StartPoint="0,0">
        <GradientStop Color="#FFFFFF" Offset="0"/>
        <GradientStop Color="LightBlue" Offset="0.1"/>
        <GradientStop Color="Blue" Offset="0.3"/>
        <GradientStop Color="Blue" Offset="0.7"/>
        <GradientStop Color="LightBlue" Offset="0.9"/>
        <GradientStop Color="#FFFFFF" Offset="0.99"/>
    </LinearGradientBrush>
    <!-- textbox -->
    <!-- ListBox -->
    <Style x:Key="ListBoxItemStyle1" TargetType="{x:Type ListBoxItem}">
        <Setter Property="BorderBrush" Value="Silver"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment"
                    Value="{Binding Path=VerticalContentAlignment,
                          RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Padding" Value="1,1,1,1"/>
        <Setter Property="Margin" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="Bd" Margin="1" SnapsToDevicePixels="true"
                                Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                            <Setter Property="FontWeight" Value="Bold"/>
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource TabItemSelectBackground}"/>
                        </Trigger>
                        <Trigger  Property="IsMouseOver" Value="True">
                            <!-- マウスオーバー時の背景色 -->
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource TabItemHotBackground}"/>
                        </Trigger>
                        <Trigger  Property="IsMouseOver" Value="True">
                            <!-- マウスオーバー時の背景色 -->
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource TabItemHotBackground}"/>
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ClassStartsWith}" Value="object.container"/>
                            </MultiDataTrigger.Conditions>
                            <!-- フォルダの色 -->
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource TabItemFolderBackground}"/>
                        </MultiDataTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <!-- マウスオーバー時の枠線の色 -->
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource TabItemHotSelectBackground}"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <DataTemplate x:Key="ItemTemplateStyle1">
        <Border x:Name="GridBorder" BorderBrush="Silver"
                    BorderThickness="2" CornerRadius="0" Padding="2">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="40*"/>
                    <ColumnDefinition Width="120"/>
                </Grid.ColumnDefinitions>

                <Grid Name="ResultsGrid" Grid.Column="0" VerticalAlignment="Stretch">
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>

                    <StackPanel Orientation="Horizontal" Grid.Row="0" HorizontalAlignment="Left" Margin="0,0,0,0">
                        <TextBlock Text="{Binding Status}" FontFamily="Webdings" Foreground="#606060"
                                       VerticalAlignment="Center" FontSize="17" FontWeight="Light" Margin="0,0,1,0"/>
                        <TextBlock Style="{StaticResource TextBlockTitleStyle}" HorizontalAlignment="Left" Margin="2,0,0,0"
                           Text="{Binding Title}">
                            <TextBlock.Effect>
                                <DropShadowEffect ShadowDepth="2" Direction="330" Color="Black" Opacity="0.1" BlurRadius="1"/>
                            </TextBlock.Effect>
                        </TextBlock>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Grid.Row="1" HorizontalAlignment="Left" Margin="0,0,0,0">
                        <TextBlock Text="{StaticResource LBL_START_TIMES}" Style="{StaticResource TextBlockLabelStyle}" />
                        <TextBlock Text="{Binding RecordDate}"  Style="{StaticResource TextBlockContentStyle}" Margin="0,0,0,0"/>
                        <TextBlock Text="("  Style="{StaticResource TextBlockContentStyle}" Margin="5,0,0,0"/>
                        <TextBlock Style="{StaticResource TextBlockWeeksContentStyle}" Margin="0,0,0,0"/>
                        <TextBlock Text=")"  Style="{StaticResource TextBlockContentStyle}" Margin="0,0,10,0"/>
                        <TextBlock Text="{Binding RecordTime}"  Style="{StaticResource TextBlockContentStyle}" Margin="0,0,10,0"/>
                        <TextBlock Text="{StaticResource LBL_RECORDING_TIMES}" Style="{StaticResource TextBlockLabelStyle}" Margin="10,0,0,0"/>
                        <TextBlock Text="{Binding DurationTime}"  Style="{StaticResource TextBlockContentStyle}" Margin="0,0,10,0"/>
                    </StackPanel>

                    <StackPanel Orientation="Horizontal" Grid.Row="2" HorizontalAlignment="Left" Margin="0,0,0,0">
                        <TextBlock Text="{StaticResource LBL_RECORDING_MODE}" Style="{StaticResource TextBlockLabelStyle}"/>
                        <TextBlock Text="{Binding RecordMode}"  Style="{StaticResource TextBlockContentStyle}" Margin="0,0,10,0"/>
                        <TextBlock Text="{StaticResource LBL_FILE_NAME}" Style="{StaticResource TextBlockLabelStyle}" Margin="10,0,0,0"/>
                        <TextBlock Text="{Binding Filename}"  Style="{StaticResource TextBlockContentStyle}" Margin="0,0,10,0"/>
                        <TextBlock Text="{StaticResource LBL_FOLDER_NAME}" Style="{StaticResource TextBlockLabelStyle}" Margin="10,0,0,0"/>
                        <TextBlock Text="{Binding Folder}"  Style="{StaticResource TextBlockContentStyle}"/>
                    </StackPanel>
                </Grid>

                <Border Grid.Column="1" Height="70" HorizontalAlignment="Right">
                    <Image Stretch="UniformToFill"  Source="{Binding ImageSource}" />
                </Border>
            </Grid>
        </Border>
    </DataTemplate>
    <DataTemplate x:Key="ItemTemplateStyle2">
        <Border x:Name="GridBorder" BorderBrush="Silver"
                    BorderThickness="2" CornerRadius="0" Padding="2">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="40*"/>
                    <ColumnDefinition Width="120"/>
                </Grid.ColumnDefinitions>

                <Grid Name="ResultsGrid" Grid.Column="0" VerticalAlignment="Stretch">
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>

                    <StackPanel Orientation="Horizontal" Grid.Row="0" HorizontalAlignment="Left" Margin="0,0,0,0">
                        <TextBlock Text="{Binding Status}" FontFamily="Webdings" Foreground="#606060"
                                       VerticalAlignment="Center" FontSize="17" FontWeight="Light" Margin="0,0,1,0"/>
                        <TextBlock Style="{StaticResource TextBlockTitleStyle}" HorizontalAlignment="Left" Margin="2,0,0,0"
                           Text="{Binding Title}">
                            <TextBlock.Effect>
                                <DropShadowEffect
                                    ShadowDepth="2"
                                    Direction="330"
                                    Color="Black"
                                    Opacity="0.1"
                                    BlurRadius="1"/>
                            </TextBlock.Effect>
                        </TextBlock>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Grid.Row="2" HorizontalAlignment="Left" Margin="0,0,0,0">
                        <TextBlock Text="{StaticResource LBL_ID_NAME}" Style="{StaticResource TextBlockLabelStyle}" Margin="10,0,0,0"/>
                        <TextBlock Text="{Binding Filename}"  Style="{StaticResource TextBlockContentStyle}" Margin="0,0,10,0"/>
                    </StackPanel>
                </Grid>

            </Grid>
        </Border>
    </DataTemplate>
    <DataTemplate x:Key="ItemTemplateStyle3">
        <Border x:Name="GridBorder" BorderBrush="Silver"
                    BorderThickness="2" CornerRadius="0" Padding="2">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="40*"/>
                    <ColumnDefinition Width="120"/>
                </Grid.ColumnDefinitions>

                <Grid Name="ResultsGrid" Grid.Column="0" VerticalAlignment="Stretch">
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>

                    <StackPanel Orientation="Horizontal" Grid.Row="0" HorizontalAlignment="Left" Margin="0,0,0,0">
                        <TextBlock Text="{Binding Status}" FontFamily="Webdings" Foreground="#606060"
                                       VerticalAlignment="Center" FontSize="17" FontWeight="Light" Margin="0,0,1,0"/>
                        <TextBlock Style="{StaticResource TextBlockTitleStyle}" HorizontalAlignment="Left" Margin="2,0,0,0"
                           Text="{Binding Title}">
                            <TextBlock.Effect>
                                <DropShadowEffect ShadowDepth="2"  Direction="330" Color="Black" Opacity="0.1" BlurRadius="1"/>
                            </TextBlock.Effect>
                        </TextBlock>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Grid.Row="1" HorizontalAlignment="Left"
                                    Margin="0,0,0,0" Style="{StaticResource StackPanelVisibleStyle}">
                        <TextBlock Text="{StaticResource LBL_START_TIMES}" Style="{StaticResource TextBlockLabelStyle}" />
                        <TextBlock Text="{Binding RecordDate}"  Style="{StaticResource TextBlockContentStyle}" Margin="0,0,0,0"/>
                        <TextBlock Text="("  Style="{StaticResource TextBlockContentStyle}" Margin="5,0,0,0"/>
                        <TextBlock Style="{StaticResource TextBlockWeeksContentStyle}" Margin="0,0,0,0"/>
                        <TextBlock Text=")"  Style="{StaticResource TextBlockContentStyle}" Margin="0,0,10,0"/>
                        <TextBlock Text="{Binding RecordTime}"  Style="{StaticResource TextBlockContentStyle}" Margin="0,0,10,0"/>
                        <TextBlock Text="{StaticResource LBL_RECORDING_TIMES}" Style="{StaticResource TextBlockLabelStyle}" Margin="10,0,0,0"/>
                        <TextBlock Text="{Binding DurationTime}"  Style="{StaticResource TextBlockContentStyle}" Margin="0,0,10,0"/>
                        <TextBlock Text="{StaticResource LBL_GENRE_NAME}" Style="{StaticResource TextBlockLabelStyle}" Margin="10,0,0,0"/>
                        <TextBlock Text="{Binding Genre}"  Style="{StaticResource TextBlockContentStyle}" Width="130" TextWrapping="NoWrap" TextTrimming="None"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Grid.Row="2" HorizontalAlignment="Left" Margin="0,0,0,0">
                        <TextBlock Text="{StaticResource LBL_ID_NAME}" Style="{StaticResource TextBlockLabelStyle}" Margin="5,0,0,0"/>
                        <TextBlock Text="{Binding Filename}"  Style="{StaticResource TextBlockContentStyle}" Margin="0,0,10,0"/>
                    </StackPanel>
                </Grid>

                <Border Grid.Column="1" HorizontalAlignment="Right">
                    <Image Stretch="UniformToFill"  Source="{Binding ImageSource}" Style="{StaticResource ImageContentStyle}"/>
                </Border>
            </Grid>
        </Border>
    </DataTemplate>
    <!-- ボタンStyle -->
    <Style x:Key="ButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{DynamicResource NormalButtonForeground}"/>
        <Setter Property="Background" Value="AliceBlue"/>
        <Setter Property="Margin" Value="8"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="Bt" CornerRadius="2" Background="{TemplateBinding Background}"
                                BorderThickness="2" BorderBrush="Silver">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center">
                        </ContentPresenter>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!-- マウスが入ったときのアニメーション -->
                        <Trigger  Property="IsMouseOver" Value="True">
                            <!-- マウスオーバー時の背景色 -->
                            <Setter Property="Background" TargetName="Bt" Value="{DynamicResource MouseOverButtonBackground}"/>
                        </Trigger>
                        <Trigger  Property="IsPressed" Value="True">
                            <!-- 押下時の背景色 -->
                            <Setter Property="Background" TargetName="Bt" Value="{DynamicResource PressedButtonBackground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- ToggleボタンStyle(左) -->
    <Style x:Key="ToggleLeftButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Foreground" Value="{DynamicResource NormalBlackButtonForeground}"/>
        <Setter Property="Background" Value="{DynamicResource BlackButtonBackground}"/>
        <Setter Property="Margin" Value="8"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border x:Name="Bt" CornerRadius="9,0,0,9" Background="{TemplateBinding Background}"
                                BorderThickness="0" BorderBrush="Silver">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center">
                        </ContentPresenter>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="False"/>
                                <Condition Property="IsChecked" Value="False"/>
                            </MultiTrigger.Conditions>
                            <!-- 非活性 非押下時 -->
                            <Setter Property="Foreground" Value="{DynamicResource NormalBlackButtonForeground}"/>
                            <Setter Property="Background" TargetName="Bt" Value="{DynamicResource BlackButtonBackground}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="False"/>
                                <Condition Property="IsChecked" Value="True"/>
                            </MultiTrigger.Conditions>
                            <!-- 非活性 押下時 -->
                            <Setter Property="Foreground" Value="{DynamicResource NormalButtonForeground}"/>
                            <Setter Property="Background" TargetName="Bt" Value="{DynamicResource DisabledButtonBackground}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="True"/>
                                <Condition Property="IsMouseOver" Value="False"/>
                                <Condition Property="IsChecked" Value="False"/>
                            </MultiTrigger.Conditions>
                            <!-- 非押下時 -->
                            <Setter Property="Foreground" Value="{DynamicResource NormalBlackButtonForeground}"/>
                            <Setter Property="Background" TargetName="Bt" Value="{DynamicResource BlackButtonBackground}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="True"/>
                                <Condition Property="IsMouseOver" Value="False"/>
                                <Condition Property="IsChecked" Value="True"/>
                            </MultiTrigger.Conditions>
                            <!-- 押下時 -->
                            <Setter Property="Foreground" Value="{DynamicResource PressedButtonForeground}"/>
                            <Setter Property="Background" TargetName="Bt" Value="{DynamicResource PressedButtonBackground}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="True"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsChecked" Value="False"/>
                            </MultiTrigger.Conditions>
                            <!-- マウスオーバー時 -->
                            <Setter Property="Foreground" Value="{DynamicResource NormalBlackButtonForeground}"/>
                            <Setter Property="Background" TargetName="Bt" Value="{DynamicResource MouseOverBlackButtonBackground}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="True"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsChecked" Value="True"/>
                            </MultiTrigger.Conditions>
                            <!-- マウスオーバー時 -->
                            <Setter Property="Foreground" Value="{DynamicResource PressedButtonForeground}"/>
                            <Setter Property="Background" TargetName="Bt" Value="{DynamicResource MouseOverButtonBackground}"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- ToggleボタンStyle(右) -->
    <Style x:Key="ToggleRightButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Foreground" Value="{DynamicResource NormalBlackButtonForeground}"/>
        <Setter Property="Background" Value="{DynamicResource BlackButtonBackground}"/>
        <Setter Property="Margin" Value="8"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border x:Name="Bt" CornerRadius="0,9,9,0" Background="{TemplateBinding Background}"
                                BorderThickness="0" BorderBrush="Silver">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center">
                        </ContentPresenter>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="False"/>
                                <Condition Property="IsChecked" Value="False"/>
                            </MultiTrigger.Conditions>
                            <!-- 非活性 非押下時 -->
                            <Setter Property="Foreground" Value="{DynamicResource NormalBlackButtonForeground}"/>
                            <Setter Property="Background" TargetName="Bt" Value="{DynamicResource BlackButtonBackground}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="False"/>
                                <Condition Property="IsChecked" Value="True"/>
                            </MultiTrigger.Conditions>
                            <!-- 非活性 押下時 -->
                            <Setter Property="Foreground" Value="{DynamicResource NormalButtonForeground}"/>
                            <Setter Property="Background" TargetName="Bt" Value="{DynamicResource DisabledButtonBackground}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="True"/>
                                <Condition Property="IsMouseOver" Value="False"/>
                                <Condition Property="IsChecked" Value="False"/>
                            </MultiTrigger.Conditions>
                            <!-- 非押下時 -->
                            <Setter Property="Foreground" Value="{DynamicResource NormalBlackButtonForeground}"/>
                            <Setter Property="Background" TargetName="Bt" Value="{DynamicResource BlackButtonBackground}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="True"/>
                                <Condition Property="IsMouseOver" Value="False"/>
                                <Condition Property="IsChecked" Value="True"/>
                            </MultiTrigger.Conditions>
                            <!-- 押下時 -->
                            <Setter Property="Foreground" Value="{DynamicResource PressedButtonForeground}"/>
                            <Setter Property="Background" TargetName="Bt" Value="{DynamicResource PressedButtonBackground}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="True"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsChecked" Value="False"/>
                            </MultiTrigger.Conditions>
                            <!-- マウスオーバー 押下時 -->
                            <Setter Property="Foreground" Value="{DynamicResource NormalBlackButtonForeground}"/>
                            <Setter Property="Background" TargetName="Bt" Value="{DynamicResource MouseOverBlackButtonBackground}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="True"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsChecked" Value="True"/>
                            </MultiTrigger.Conditions>
                            <!-- マウスオーバー 非押下時 -->
                            <Setter Property="Foreground" Value="{DynamicResource PressedButtonForeground}"/>
                            <Setter Property="Background" TargetName="Bt" Value="{DynamicResource MouseOverButtonBackground}"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- 検索ボタンStyle -->
    <Style x:Key="SearchButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="Margin" Value="8"/>
        <Setter Property="Opacity" Value="0.4"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border>
                        <Border.Background>
                            <ImageBrush ImageSource="../Images/roupe.png" Stretch="Uniform"/>
                        </Border.Background>
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center">
                        </ContentPresenter>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!-- マウスが入ったときのアニメーション -->
                        <Trigger  Property="IsMouseOver" Value="True">
                            <!-- マウスオーバー時の背景色 -->
                            <Setter Property="Opacity" Value="0.6"/>
                        </Trigger>
                        <Trigger  Property="IsPressed" Value="True">
                            <!-- マウスオーバー時の背景色 -->
                            <Setter Property="Opacity" Value="1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- 閉じるボタンStyle -->
    <Style x:Key="CloseButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="Margin" Value="8"/>
        <Setter Property="Opacity" Value="0.4"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border>
                        <Border.Background>
                            <ImageBrush ImageSource="../Images/close.png" Stretch="Uniform"/>
                        </Border.Background>
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center">
                        </ContentPresenter>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!-- マウスが入ったときのアニメーション -->
                        <Trigger  Property="IsMouseOver" Value="True">
                            <!-- マウスオーバー時の背景色 -->
                            <Setter Property="Opacity" Value="0.6"/>
                        </Trigger>
                        <Trigger  Property="IsPressed" Value="True">
                            <!-- マウスオーバー時の背景色 -->
                            <Setter Property="Opacity" Value="1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- 標準時のボタン色 -->
    <LinearGradientBrush x:Key="NormalButtonForeground" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="Black" Offset="0"/>
        <GradientStop Color="Gray" Offset="0.9"/>
        <GradientStop Color="White" Offset="1"/>
    </LinearGradientBrush>
    <!-- Black標準時のボタン色 -->
    <LinearGradientBrush x:Key="NormalBlackButtonForeground" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="White" Offset="0"/>
        <GradientStop Color="#E0E0E0" Offset="0.7"/>
        <GradientStop Color="#D0D0E0" Offset="1.0"/>
    </LinearGradientBrush>
    <!-- 押下時のボタン色 -->
    <LinearGradientBrush x:Key="PressedButtonForeground" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#4E4F60" Offset="0"/>
        <GradientStop Color="#5E5F8F" Offset="0.3"/>
        <GradientStop Color="#3E3FAF" Offset="1"/>
    </LinearGradientBrush>
    <!-- 標準時のボタン背景色 -->
    <LinearGradientBrush x:Key="NormalButtonBackground" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#FEFFFF" Offset="0"/>
        <GradientStop Color="#E0E6DF" Offset="0.6"/>
        <GradientStop Color="#F0FFFF" Offset="1"/>
    </LinearGradientBrush>
    <!-- Black標準時のボタン背景色 -->
    <LinearGradientBrush x:Key="BlackButtonBackground" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#3E3F68" Offset="0"/>
        <GradientStop Color="#2E2F3F" Offset="0.2"/>
        <GradientStop Color="#3E3F58" Offset="1"/>
    </LinearGradientBrush>
    <!-- 非活性時のボタン背景色 -->
    <LinearGradientBrush x:Key="DisabledButtonBackground" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#FEFFFF" Offset="0"/>
        <GradientStop Color="Silver" Offset="0.6"/>
        <GradientStop Color="Gray" Offset="0.6"/>
        <GradientStop Color="#F0FFFF" Offset="1"/>
    </LinearGradientBrush>
    <!-- マウスオーバー時のボタン背景色 -->
    <LinearGradientBrush x:Key="MouseOverButtonBackground" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#F6FFA3" Offset="0"/>
        <GradientStop Color="#FFE6B0" Offset="0.6"/>
        <GradientStop Color="#FFDDA0" Offset="0.6"/>
        <GradientStop Color="#FFF09A" Offset="1"/>
    </LinearGradientBrush>
    <!-- Blackマウスオーバー時のボタン背景色 -->
    <LinearGradientBrush x:Key="MouseOverBlackButtonBackground" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#4E4F60" Offset="0"/>
        <GradientStop Color="#5E5F8F" Offset="0.3"/>
        <GradientStop Color="#5E5F8F" Offset="0.9"/>
        <GradientStop Color="#4E4F60" Offset="0"/>
    </LinearGradientBrush>
    <!-- 押下時のボタン背景色 -->
    <LinearGradientBrush x:Key="PressedButtonBackground" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#FFF7DA20" Offset="0"/>
        <GradientStop Color="#FFDDA0" Offset="0.6"/>
        <GradientStop Color="Orange" Offset="0.6"/>
        <GradientStop Color="#FFFFCA6C" Offset="1"/>
    </LinearGradientBrush>
</ResourceDictionary>